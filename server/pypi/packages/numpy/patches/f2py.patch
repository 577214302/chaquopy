diff -ur requirements-original/numpy/f2py/f90mod_rules.py requirements/numpy/f2py/f90mod_rules.py
--- requirements-original/numpy/f2py/f90mod_rules.py    2018-02-28 17:03:26.000000000 +0000
+++ requirements/numpy/f2py/f90mod_rules.py     2018-04-22 19:42:24.178863635 +0000
@@ -46,6 +46,19 @@
             ret = ret + findf90modules(b)
     return ret

+# Chaquopy: get this from the generated header file rather than the build machine.
+import os
+import pkgutil
+numpyconfig_h = pkgutil.get_data("numpy", "core/include/numpy/_numpyconfig.h").decode("UTF-8")
+for line in numpyconfig_h.splitlines():
+    words = line.split()
+    # This is valid because npy_common.h has `#define NPY_SIZEOF_INTP NPY_SIZEOF_PY_INTPTR_T`.
+    if (len(words) == 3) and (words[:2] == ["#define", "NPY_SIZEOF_PY_INTPTR_T"]):
+        SIZEOF_INTP = int(words[2])
+        break
+else:
+    raise Exception("Couldn't determine SIZEOF_INTP")
+
 fgetdims1 = """\
       external f2pysetdata
       logical ns
@@ -62,7 +75,7 @@
             deallocate(d)
          end if
       end if
-      if ((.not.allocated(d)).and.(s(1).ge.1)) then""" % np.intp().itemsize
+      if ((.not.allocated(d)).and.(s(1).ge.1)) then""" % SIZEOF_INTP

 fgetdims2 = """\
       end if
diff -ur requirements-original/numpy/f2py/__init__.py requirements/numpy/f2py/__init__.py
--- requirements-original/numpy/f2py/__init__.py	2018-02-28 17:03:26.000000000 +0000
+++ requirements/numpy/f2py/__init__.py	2018-04-22 14:56:55.304772470 +0000
@@ -9,7 +9,7 @@
 import sys

 from . import f2py2e
-from . import f2py_testing
+# from . import f2py_testing  # Chaquopy: disabled
 from . import diagnose

 run_main = f2py2e.run_main
@@ -69,6 +69,7 @@
         f.close()
     return status

-from numpy.testing import _numpy_tester
-test = _numpy_tester().test
-bench = _numpy_tester().bench
+# Chaquopy: disabled
+# from numpy.testing import _numpy_tester
+# test = _numpy_tester().test
+# bench = _numpy_tester().bench
