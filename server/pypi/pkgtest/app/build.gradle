apply plugin: 'com.android.application'

apply plugin: 'com.chaquo.python'
import com.chaquo.python.Common


// Packages not to include in the mass pre-release test.
ext.DEFAULT_EXCLUDE_PACKAGES = [
    // Not in the public package repository.
    "cmake-example",
    "python-example",

    // Conflicts with more popular packages
    "opencv-contrib-python",  // opencv-python
    "opencv-contrib-python-headless",  // opencv-python
    "opencv-python-headless",  // opencv-python
    "pycrypto",  // pycryptodome
]

// Extra dependencies required to run the tests. Each entry is a pip requirement specifier.
def SPACY_MODEL = "en_core_web_sm-2.2.5"
ext.TEST_PACKAGES = [
    "dlib": ["numpy"],
    "grpcio": ["protobuf"],
    "spacy": ["https://github.com/explosion/spacy-models/releases/download/$SPACY_MODEL/${SPACY_MODEL}.tar.gz"],
]


android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28

        applicationId "com.chaquo.python.pkgtest3"

        // Final digit of versionCode is 0 for -SNAPSHOT builds in this repo, and 1 for released
        // builds in the public repo.
        versionName rootProject.version + "-SNAPSHOT"
        def verParsed = rootProject.version.split(/\./).collect { Integer.parseInt(it) }
        versionCode ((verParsed[0] * 1000000) + (verParsed[1] * 1000) + (verParsed[2] * 10) + 0)

        // To test everything except DEFAULT_EXCLUDE_PACKAGES, replace the list with `null`.
        addPackages(delegate, [])
        python {
            pip {
                // After a package is tested, remember to move it to the public repository!
                options "--extra-index-url", "https://chaquo.com/pypi-test/"
            }
        }

        ndk {
            abiFilters Common.ABIS.toArray()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        def demoSrc = "../../../../demo/app/src"
        main {
            java { srcDir "$demoSrc/main/java" }
            python { srcDir "$demoSrc/main/python" }
            res { srcDir "$demoSrc/main/res" }  // Overrides are in pkgtest/app/src/debug.
        }
    }
}


def addPackages(flavor, List<String> packages) {
    def inputDir = "../../packages"
    def allPackages = false
    if (packages == null) {
        allPackages = true
        packages = []
        for (f in file(inputDir).listFiles()) {
            if (f.isDirectory() && !(f.name in DEFAULT_EXCLUDE_PACKAGES)) {
                packages.add(f.name)
            }
        }
    }

    def outputDir = "src/$flavor.name/python/chaquopy/test"
    delete(outputDir)
    mkdir(outputDir)
    String suiteSrc = ""
    for (req in packages) {
        def pkgName = req.split("==")[0]
        def pkgDir = file("$inputDir/$pkgName")
        def testPaths = ["test.py", "test"]
            .collect { file("$pkgDir/$it") }
            .findAll { it.exists() }
        if (testPaths.size() != 1) {
            if (testPaths.isEmpty() && allPackages && pkgName.startsWith("chaquopy-")) {
                continue  // Probably a non-Python package.
            } else {
                throw new GradleException("Found ${testPaths.size()} test files in $pkgDir")
            }
        }

        def testPath = testPaths[0]
        flavor.python.pip {
            install req
            TEST_PACKAGES.getOrDefault(pkgName, []).each { install it }
        }
        def pkgModule = pkgName.replace('-', '_')
        copy {
            from testPath.parentFile
            include "${testPath.name}/**"
            into outputDir
        }
        file("$outputDir/$testPath.name").renameTo(
            file("$outputDir/${testPath.name.replace('test', pkgModule)}"))
        suiteSrc += "from .${pkgModule} import *\n"
    }
    file("$outputDir/__init__.py").text = suiteSrc
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "android.arch.lifecycle:extensions:1.1.0"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:preference-v14:28.0.0'
    implementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
}
