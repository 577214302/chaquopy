apply plugin: 'com.android.application'

apply plugin: 'com.chaquo.python'
import com.chaquo.python.Common


android {
    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26

        // Final digit of versionCode is 0 for -SNAPSHOT builds in this repo, and 1 for released
        // builds in the public repo.
        versionName rootProject.version + "-SNAPSHOT"
        def verParsed = rootProject.version.split(/\./).collect { Integer.parseInt(it) }
        versionCode ((verParsed[0] * 1000000) + (verParsed[1] * 1000) + (verParsed[2] * 10) + 0)

        // Enable this for testing, but don't commit it.
        // Once a package is ready to be released, remember to move it to the public repository!
        // python.pip.options "--extra-index-url", "https://chaquo.com/pypi-test/"

        ndk {
            abiFilters Common.ABIS.toArray()
        }
    }

    flavorDimensions "pyVersion", "packages"
    productFlavors {
        // Allow temporary single-version testing just by editing Common.java.
        if (Common.PYTHON_VERSIONS.contains("2.7.15")) {
            py2 {
                dimension "pyVersion"
                applicationId "com.chaquo.python.pkgtest2"
                python { version "2.7.15" }
            }
        }
        if (Common.PYTHON_VERSIONS.contains("3.6.5")) {
            py3 {
                dimension "pyVersion"
                applicationId "com.chaquo.python.pkgtest3"
                python { version "3.6.5" }
            }
        }

        allPackages {  // Can't call a flavor "all" (https://stackoverflow.com/a/30236690).
            dimension "packages"
            addPackages(delegate, include: [])
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        def demoSrc = "../../../../demo/app/src"
        main {
            java {
                srcDirs = ["$demoSrc/main/java"]
                includes = ["**/App.java", "**/MainActivity.java",
                            "**/PythonTestActivity.java", "**/ReplActivity.java",
                            "com/chaquo/python/utils/**"]
            }
            python { srcDir "$demoSrc/main/python" }
            res { srcDirs = ["$demoSrc/main/res"] }
        }
    }
}


def addPackages(flavor) {
    addPackages([:], flavor)
}

def addPackages(Map kwargs, flavor) {
    def inputDir = "../../packages"
    List packages = kwargs.getOrDefault("include", [])
    if (packages.isEmpty()) {
        for (f in file(inputDir).listFiles()) {
            if (f.isDirectory()) {
                packages.add(f.name)
            }
        }
    }
    List exclude = kwargs.getOrDefault("exclude", [])
    packages.removeIf({ exclude.contains(it) })

    def outputDir = "src/$flavor.name/python/chaquopy/test"
    delete(outputDir)
    mkdir(outputDir)
    String suiteSrc = ""
    for (pkgName in packages) {
        flavor.python.pip.install pkgName
        def inFilename = "$inputDir/$pkgName/test.py"
        if (file(inFilename).exists()) {
            def pkgModule = pkgName.replace('-', '_')
            copy {
                from inFilename
                into outputDir
                rename "test.py", "${pkgModule}.py"
            }
            suiteSrc += "from .${pkgModule} import *\n"
        }
    }
    file("$outputDir/__init__.py").text = suiteSrc
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile "android.arch.lifecycle:extensions:1.1.0"
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:preference-v14:26.1.0'
    testImplementation 'junit:junit:4.12'
}
