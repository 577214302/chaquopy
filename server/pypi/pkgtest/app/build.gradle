apply plugin: 'com.android.application'

apply plugin: 'com.chaquo.python'
import com.chaquo.python.Common


android {
    compileSdkVersion 23
    defaultConfig {
        applicationId "com.chaquo.python.pkgtest"
        minSdkVersion 15
        targetSdkVersion 23

        // Final digit of versionCode is 0 for -SNAPSHOT builds in this repo, and 1 for released
        // builds in the public repo.
        def ver = file("../../../../VERSION.txt").text.trim()
        versionName ver + "-SNAPSHOT"
        def verParsed = ver.split(/\./).collect { Integer.parseInt(it) }
        versionCode ((verParsed[0] * 1000000) + (verParsed[1] * 1000) + (verParsed[2] * 10) + 0)

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        python {
            version "2.7.10"
        }
        ndk {
            abiFilters Common.ABIS.toArray()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            res.srcDir "../../../../demo/app/src/main/res"
        }
    }
}


delete("src/main/java")
def JAVA_INPUT_DIR = "../../../../demo/app/src/main/java/com/chaquo/python/demo"
def JAVA_OUTPUT_DIR = "src/main/java/com/chaquo/python/pkgtest"
delete(JAVA_OUTPUT_DIR)
mkdir(JAVA_OUTPUT_DIR)
for (def clsName : ["App", "ConsoleActivity", "MainActivity", "UnitTestActivity",
                    "PythonTestActivity", "ReplActivity"]) {
    def inSrc = file("$JAVA_INPUT_DIR/${clsName}.java").text
    def outSrc = inSrc.replace("com.chaquo.python.demo", "com.chaquo.python.pkgtest")
    file("$JAVA_OUTPUT_DIR/${clsName}.java").text = outSrc
}


delete("src/main/python")
copy {
    from "../../../../demo/app/src/main/python"
    include "chaquopy/__init__.py", "chaquopy/demo/**"
    into "src/main/python"
}

def PY_INPUT_DIR = "../../packages"
def PY_OUTPUT_DIR = "src/main/python/chaquopy/test"
def INCLUDE_PACKAGES = []
def EXCLUDE_PACKAGES = []
String suiteSrc = ""
for (def inDir : file(PY_INPUT_DIR).listFiles().findAll { it.isDirectory() }) {
    def pkgName = inDir.name
    if ((!INCLUDE_PACKAGES.isEmpty() && !INCLUDE_PACKAGES.contains(pkgName)) ||
        EXCLUDE_PACKAGES.contains(pkgName)) {
        continue
    }

    def pkgVer = file("$inDir/version.txt").text.trim()
    android.defaultConfig.python.pip { install "$pkgName==$pkgVer" }
    def inFilename = "$inDir/test.py"
    assert file(inFilename).exists()
    copy {
        from inFilename
        into PY_OUTPUT_DIR
        rename "test.py", "${pkgName}.py"
    }
    suiteSrc += "from .${pkgName} import *\n"
}
file("$PY_OUTPUT_DIR/__init__.py").text = suiteSrc


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:preference-v14:23.4.0'
    testImplementation 'junit:junit:4.12'
}
