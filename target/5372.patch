diff --git a/sources/crystax/src/crystax/auxv.c b/sources/crystax/src/crystax/auxv.c
index ab22bbcd..29e7377b 100644
--- a/sources/crystax/src/crystax/auxv.c
+++ b/sources/crystax/src/crystax/auxv.c
@@ -48,6 +48,11 @@

 #define DUMPABLE_VALUE 1

+static ElfW(auxv_t) empty_auxv = {
+    AT_NULL,
+    { 0 }
+};
+
 static ElfW(auxv_t) *readauxv()
 {
     int fd;
@@ -66,18 +71,24 @@ static ElfW(auxv_t) *readauxv()
         PANIC("can't get PR_GET_DUMPABLE: %s", strerror(errno));

     if (dumpable != DUMPABLE_VALUE) {
-        if (prctl(PR_SET_DUMPABLE, DUMPABLE_VALUE, 0, 0, 0) < 0)
-            PANIC("can't set PR_SET_DUMPABLE: %s", strerror(errno));
+        if (prctl(PR_SET_DUMPABLE, DUMPABLE_VALUE, 0, 0, 0) < 0) {
+            CRYSTAX_ERR("can't set PR_SET_DUMPABLE: %s", strerror(errno));
+            return &empty_auxv;
+        }

         rl.rlim_cur = 0;
         rl.rlim_max = RLIM_INFINITY;
-        if (setrlimit(RLIMIT_CORE, &rl) < 0)
-            PANIC("Can't set RLIMIT_CORE: %s", strerror(errno));
+        if (setrlimit(RLIMIT_CORE, &rl) < 0) {
+            CRYSTAX_ERR("Can't set RLIMIT_CORE: %s", strerror(errno));
+            return &empty_auxv;
+        }
     }

     fd = open(fname, O_RDONLY);
-    if (fd < 0)
-        PANIC("can't open %s: %s", fname, strerror(errno));
+    if (fd < 0) {
+        CRYSTAX_ERR("can't open %s: %s", fname, strerror(errno));
+        return &empty_auxv;
+    }

     for (;;)
     {
